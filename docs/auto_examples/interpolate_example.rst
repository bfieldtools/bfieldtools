.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_interpolate_example.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_interpolate_example.py:


Interpolate stream function
===========================

Minimal example showing how to subdivide a mesh and interpolate a scalar function
defined on that mesh to match.



.. code-block:: default


    from tvtk.api import tvtk
    from mayavi import mlab
    import trimesh

    import numpy as np
    from scipy.linalg import eigh

    from bfieldtools.laplacian_mesh import laplacian_matrix, mass_matrix
    from bfieldtools import utils

    import pkg_resources








Load a simple mesh and compute an example scalar function on it.
In this case, the scalar function is an eigenvector of a generalized eigenvalue decomposition


.. code-block:: default


    mesh = trimesh.load(pkg_resources.resource_filename('bfieldtools', 'example_meshes/10x10_plane.obj'))


    boundary_verts, inner_verts, boundary_tris, inner_tris = utils.find_mesh_boundaries(mesh.vertices, mesh.faces, mesh.edges)

    L = laplacian_matrix(mesh)
    M = mass_matrix(mesh)

    u, v = eigh(-L.todense()[inner_verts][:,inner_verts], M.todense()[inner_verts][:,inner_verts])

    scalars = np.zeros(mesh.vertices.shape[0])
    scalars[inner_verts] = v[:,12]




    original_scalars = scalars.copy()
    original_mesh = mesh.copy()







Plot original scalars and mesh


.. code-block:: default


    scene = mlab.figure(None, bgcolor=(1, 1, 1), fgcolor=(0.5, 0.5, 0.5),
                   size=(800, 800))

    mlab.triangular_mesh(*original_mesh.vertices.T, original_mesh.faces, scalars=original_scalars,
                         representation='wireframe')






.. image:: /auto_examples/images/sphx_glr_interpolate_example_001.png
    :class: sphx-glr-single-img




Now, interpolate scalars


.. code-block:: default



    ug = tvtk.UnstructuredGrid(points= mesh.vertices)

    ug.set_cells(tvtk.Triangle().cell_type, mesh.faces)
    ug.point_data.scalars = scalars
    ug.point_data.scalars.name = 'scalars'


    mesh = original_mesh.subdivide().subdivide()
    scalars = mlab.pipeline.probe_data(ug, *mesh.vertices.T)








Plot subdivided mesh and interpolated scalars


.. code-block:: default


    scene = mlab.figure(None, bgcolor=(1, 1, 1), fgcolor=(0.5, 0.5, 0.5),
                   size=(800, 800))

    mlab.triangular_mesh(*mesh.vertices.T, mesh.faces, scalars=scalars,
                         representation='wireframe')


.. image:: /auto_examples/images/sphx_glr_interpolate_example_002.png
    :class: sphx-glr-single-img





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.993 seconds)


.. _sphx_glr_download_auto_examples_interpolate_example.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: interpolate_example.py <interpolate_example.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: interpolate_example.ipynb <interpolate_example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
