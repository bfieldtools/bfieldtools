.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_validation_spherical_harmonics_bfield_validation.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_validation_spherical_harmonics_bfield_validation.py:


Spherical harmonics B-field computation validation
==================================================






.. image:: /auto_examples/validation/images/sphx_glr_spherical_harmonics_bfield_validation_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    l = 1 computed
    l = 2 computed
    l = 3 computed
    l = 4 computed
    l = 5 computed
    l = 6 computed
    l = 7 computed
    l = 8 computed
    l = 9 computed
    l = 10 computed
    l = 11 computed
    l = 12 computed
    Computing magnetic field coupling matrix, 676 vertices by 676 target points... took 0.18 seconds.
    /l/bfieldtools/bfieldtools/sphtools.py:347: RuntimeWarning: invalid value encountered in multiply
      derxlm *= -1*np.sin(theta) #this comes from dXlm(cos(theta))/dtheta = dXlm(cos(theta))/dcos(theta)*(-sin(theta))
    /l/bfieldtools/bfieldtools/sphtools.py:371: RuntimeWarning: divide by zero encountered in true_divide
      sinxlm = m/(np.sin(theta))*self.xlm(l,m, theta)
    /l/bfieldtools/bfieldtools/sphtools.py:371: RuntimeWarning: invalid value encountered in multiply
      sinxlm = m/(np.sin(theta))*self.xlm(l,m, theta)
    /l/bfieldtools/bfieldtools/sphtools.py:710: RuntimeWarning: invalid value encountered in multiply
      Philm *= acoeffs[idx] # Fixed b -> a
    /l/bfieldtools/bfieldtools/sphtools.py:401: RuntimeWarning: invalid value encountered in multiply
      dthylm = np.sqrt(2)*self.derxlm(l,m, theta)*np.sin(m*phi)
    Relative RMS error nan





|


.. code-block:: default


    import numpy as np
    import trimesh
    from mayavi import mlab

    from bfieldtools.mesh_magnetics import magnetic_field_coupling
    from bfieldtools.mesh_class import MeshWrapper

    from bfieldtools.sphtools import compute_sphcoeffs_mesh, sphbasis


    import pkg_resources

    #Load simple plane mesh that is centered on the origin
    file_obj = pkg_resources.resource_filename('bfieldtools',
                        'example_meshes/10x10_plane.obj')
    coilmesh = trimesh.load(file_obj, process=False)
    coil = MeshWrapper(mesh_obj = coilmesh)

    coil.mesh.vertices += np.array([0,-1,0])
    weights = np.zeros(coilmesh.vertices.shape[0])
    weights[coil.inner_verts] = 1

    test_points = coilmesh.vertices.copy()
    test_points[:, 1] = 0

    lmax = 12

    sph = sphbasis(20)

    sph_C = compute_sphcoeffs_mesh(coil.mesh, lmax)

    alms = sph_C[0] @ weights
    blms = sph_C[1] @ weights

    alms = np.zeros_like(alms)

    B0 = (magnetic_field_coupling(coilmesh, test_points) @ weights).T
    B1 = sph.field(test_points, alms, blms, lmax).T



    s = mlab.triangular_mesh(*coilmesh.vertices.T, coilmesh.faces,
                             scalars=weights, colormap='viridis')
    s.enable_contours = True
    s.actor.property.render_lines_as_tubes = True
    s.actor.property.line_width = 3.0

    mlab.quiver3d(*test_points.T, *B0, color=(1,0,0), scale_factor=0.5e7, vmin=0, vmax=2e-7)
    mlab.quiver3d(*test_points.T, *B1, color=(0,0,1), scale_factor=0.5e7, vmin=0, vmax=2e-7)
    s.scene.isometric_view()


    print('Relative RMS error',  np.sqrt(np.mean((B1-B0)**2))/np.sqrt(np.mean((B0)**2)))

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  37.849 seconds)

**Estimated memory usage:**  87 MB


.. _sphx_glr_download_auto_examples_validation_spherical_harmonics_bfield_validation.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: spherical_harmonics_bfield_validation.py <spherical_harmonics_bfield_validation.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: spherical_harmonics_bfield_validation.ipynb <spherical_harmonics_bfield_validation.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
