.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_validation_spherical_harmonics_bfield_validation.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_validation_spherical_harmonics_bfield_validation.py:


Spherical harmonics B-field computation validation
==================================================






.. code-block:: pytb

    Traceback (most recent call last):
      File "/l/conda-envs/mne/lib/python3.6/site-packages/sphinx_gallery/gen_rst.py", line 474, in _memory_usage
        multiprocess=True)
      File "/l/conda-envs/mne/lib/python3.6/site-packages/memory_profiler.py", line 336, in memory_usage
        returned = f(*args, **kw)
      File "/l/conda-envs/mne/lib/python3.6/site-packages/sphinx_gallery/gen_rst.py", line 465, in __call__
        exec(self.code, self.globals)
      File "/l/bfieldtools/examples/validation/spherical_harmonics_bfield_validation.py", line 44, in <module>
        B0 = np.moveaxis(magnetic_field_coupling(coilmesh, test_points), 2, 0) @ weights
    ValueError: shapes (676,676,3) and (676,) not aligned: 3 (dim 2) != 676 (dim 0)





.. code-block:: default


    import numpy as np
    import trimesh
    from mayavi import mlab

    from bfieldtools.mesh_magnetics import magnetic_field_coupling
    from bfieldtools.mesh_class import MeshWrapper

    from bfieldtools.sphtools import compute_sphcoeffs_mesh, sphbasis


    import pkg_resources

    #Load simple plane mesh that is centered on the origin
    file_obj = pkg_resources.resource_filename('bfieldtools',
                        'example_meshes/10x10_plane.obj')
    coilmesh = trimesh.load(file_obj, process=False)
    coil = MeshWrapper(mesh_obj = coilmesh)

    coil.mesh.vertices += np.array([0,-1,0])
    weights = np.zeros(coilmesh.vertices.shape[0])
    weights[coil.inner_verts] = 1

    test_points = coilmesh.vertices + np.array([0,1,0])

    lmax = 10

    sph = sphbasis(20)

    sph_C = compute_sphcoeffs_mesh(coil.mesh, lmax)

    alms = sph_C[0] @ weights
    blms = sph_C[1] @ weights

    blms = np.zeros_like(alms)

    B0 = np.moveaxis(magnetic_field_coupling(coilmesh, test_points), 2, 0) @ weights
    B1 = sph.field(test_points, alms, blms, lmax).T



    s = mlab.triangular_mesh(*coilmesh.vertices.T, coilmesh.faces,
                             scalars=weights, colormap='viridis')
    s.enable_contours = True
    s.actor.property.render_lines_as_tubes = True
    s.actor.property.line_width = 3.0

    mlab.quiver3d(*test_points.T, *B0, color=(1,0,0))
    mlab.quiver3d(*test_points.T, *B1, color=(0,0,1))

    print('Relative RMS error',  np.sqrt(np.mean((B1-B0)**2))/np.sqrt(np.mean((B0)**2)))

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  11.496 seconds)

**Estimated memory usage:**  9 MB


.. _sphx_glr_download_auto_examples_validation_spherical_harmonics_bfield_validation.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: spherical_harmonics_bfield_validation.py <spherical_harmonics_bfield_validation.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: spherical_harmonics_bfield_validation.ipynb <spherical_harmonics_bfield_validation.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
